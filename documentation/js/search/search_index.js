var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ExampleService.html",[0,0.833,1,1.095]],["body/injectables/ExampleService.html",[0,0.417,1,1.546,2,0.563,3,0.563,4,0.563,5,0.411,6,0.736,7,0.419,8,0.311,9,0.725,10,3.293,11,3.03,12,0.992,13,0.992,14,0.992,15,0.992,16,1.602,17,1.591,18,2.248,19,0.992,20,2.794,21,1.78,22,1.602,23,2.017,24,0.992,25,2.017,26,2.577,27,1.602,28,0.992,29,2.177,30,1.828,31,1.602,32,1.407,33,0.992,34,0.992,35,2.017,36,1.171,37,0.736,38,0.992,39,0.549,40,0.992,41,0.109,42,0.992,43,2.719,44,3.263,45,0.992,46,1.602,47,0.992,48,1.329,49,1.329,50,2.794,51,0.992,52,1.78,53,1.602,54,0.971,55,0.992,56,0.311,57,0.992,58,1.602,59,0.563,60,0.992,61,0.563,62,0.992,63,1.348,64,0.992,65,1.602,66,1.329,67,1.329,68,0.992,69,2.042,70,1.329,71,0.992,72,0.992,73,0.992,74,0.992,75,0.992,76,0.992,77,2.316,78,0.992,79,0.992,80,1.828,81,1.602,82,1.828,83,1.329,84,1.329,85,0.563,86,0.563,87,1.329,88,1.602,89,0.992,90,0.563,91,0.563,92,0.992,93,1.602,94,0.992,95,0.992,96,0.992,97,0.992,98,0.992,99,1.329,100,0.992,101,0.992,102,0.992,103,0.992,104,0.563,105,0.563,106,0.563,107,0.563,108,0.992,109,1.329,110,0.563,111,0.563,112,0.563,113,1.602,114,0.563,115,0.563,116,0.563,117,0.563,118,0.563,119,0.563,120,0.563,121,0.563,122,0.563,123,0.563,124,0.563,125,0.563,126,0.563,127,0.563,128,0.992,129,2.017,130,1.602,131,0.411,132,0.563,133,0.563,134,0.563,135,0.563,136,0.563,137,0.563,138,0.563,139,0.027,140,0.027]],["title/coverage.html",[141,1.961]],["body/coverage.html",[0,1.119,1,1.472,5,1.943,6,1.798,7,1.024,8,1.798,32,1.472,37,1.472,41,0.099,63,1.472,139,0.088,140,0.088,141,1.943,142,1.943,143,2.659,144,2.659,145,3.249,146,2.659,147,2.659,148,2.659,149,2.659,150,2.659]],["title/index.html",[56,1.095,151,1.978]],["body/index.html",[7,0.96,41,0.095,139,0.095,140,0.095,152,2.227]],["title/license.html",[153,1.485]],["body/license.html",[41,0.071,69,1.412,139,0.071,140,0.071,142,1.412,153,1.069,154,1.932,155,3.01,156,1.932,157,1.932,158,1.932,159,1.932,160,2.641,161,1.932,162,1.932,163,1.932,164,1.932,165,1.932,166,1.932,167,2.641,168,3.697,169,1.932,170,1.932,171,1.932,172,3.01,173,1.932,174,2.641,175,1.932,176,1.932,177,2.641,178,1.932,179,1.932,180,1.932,181,1.932,182,1.932,183,1.932,184,1.932,185,2.641,186,1.932,187,1.932,188,1.932,189,1.932,190,1.932,191,1.932,192,1.932,193,2.641,194,2.641,195,1.932,196,1.932,197,1.932,198,1.932,199,1.932,200,1.932,201,1.932,202,1.932,203,1.932,204,1.932,205,1.932,206,1.932,207,1.932,208,1.932,209,1.932,210,1.932,211,1.932,212,1.932,213,1.932,214,1.932,215,1.932,216,1.932,217,1.932,218,1.932,219,1.932,220,1.932,221,1.932,222,1.932,223,1.932,224,1.932]],["title/modules.html",[225,1.961]],["body/modules.html",[41,0.096,139,0.096,140,0.096,225,2.241]],["title/overview.html",[226,1.961]],["body/overview.html",[0,1.267,41,0.095,139,0.095,140,0.095,226,2.199,227,3.009,228,3.009]],["title/properties.html",[39,1.314,229,1.66]],["body/properties.html",[7,0.815,9,1.891,36,1.891,39,1.432,41,0.106,54,1.891,139,0.086,140,0.086,152,1.891,153,1.432,230,2.588,231,2.588,232,2.588,233,2.588,234,2.588,235,2.588,236,3.195,237,2.588,238,2.588,239,2.588,240,2.588,241,2.588,242,2.588,243,2.588,244,2.588]],["title/routes.html",[245,1.961]],["body/routes.html",[41,0.096,139,0.096,140,0.096,245,2.241]],["title/miscellaneous/variables.html",[246,1.213,247,1.735]],["body/miscellaneous/variables.html",[6,1.48,7,1.027,8,1.804,17,1.954,18,2.382,21,1.954,26,1.954,32,1.804,37,1.48,41,0.099,52,1.954,56,1.48,63,1.48,131,1.954,139,0.088,140,0.088,246,2.382,247,1.954,248,2.674,249,2.674]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":228,"title":{},"body":{"overview.html":{}}}],["1",{"_index":227,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":231,"title":{},"body":{"properties.html":{}}}],["1/1",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":145,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["2025",{"_index":157,"title":{},"body":{"license.html":{}}}],["above",{"_index":192,"title":{},"body":{"license.html":{}}}],["access",{"_index":25,"title":{},"body":{"injectables/ExampleService.html":{}}}],["accessors",{"_index":57,"title":{},"body":{"injectables/ExampleService.html":{}}}],["action",{"_index":217,"title":{},"body":{"license.html":{}}}],["allowing",{"_index":119,"title":{},"body":{"injectables/ExampleService.html":{}}}],["and/or",{"_index":183,"title":{},"body":{"license.html":{}}}],["angular's",{"_index":16,"title":{},"body":{"injectables/ExampleService.html":{}}}],["angular/core",{"_index":112,"title":{},"body":{"injectables/ExampleService.html":{}}}],["application",{"_index":12,"title":{},"body":{"injectables/ExampleService.html":{}}}],["appmodule",{"_index":55,"title":{},"body":{"injectables/ExampleService.html":{}}}],["arising",{"_index":221,"title":{},"body":{"license.html":{}}}],["associated",{"_index":169,"title":{},"body":{"license.html":{}}}],["author",{"_index":244,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":210,"title":{},"body":{"license.html":{}}}],["available",{"_index":76,"title":{},"body":{"injectables/ExampleService.html":{}}}],["based",{"_index":22,"title":{},"body":{"injectables/ExampleService.html":{}}}],["between",{"_index":117,"title":{},"body":{"injectables/ExampleService.html":{}}}],["bugs",{"_index":238,"title":{},"body":{"properties.html":{}}}],["c",{"_index":156,"title":{},"body":{"license.html":{}}}],["cases",{"_index":68,"title":{},"body":{"injectables/ExampleService.html":{}}}],["centralized",{"_index":24,"title":{},"body":{"injectables/ExampleService.html":{}}}],["charge",{"_index":164,"title":{},"body":{"license.html":{}}}],["check.service.ts",{"_index":8,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check.service.ts:137",{"_index":91,"title":{},"body":{"injectables/ExampleService.html":{}}}],["check.service.ts:73",{"_index":61,"title":{},"body":{"injectables/ExampleService.html":{}}}],["checking",{"_index":232,"title":{},"body":{"properties.html":{}}}],["claim",{"_index":213,"title":{},"body":{"license.html":{}}}],["class",{"_index":54,"title":{},"body":{"injectables/ExampleService.html":{},"properties.html":{}}}],["compodoc",{"_index":152,"title":{},"body":{"index.html":{},"properties.html":{}}}],["conditions",{"_index":191,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":26,"title":{},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["configurationtoken",{"_index":32,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":101,"title":{},"body":{"injectables/ExampleService.html":{}}}],["configured&#39",{"_index":107,"title":{},"body":{"injectables/ExampleService.html":{}}}],["connection",{"_index":223,"title":{},"body":{"license.html":{}}}],["console.log(&#39;example",{"_index":104,"title":{},"body":{"injectables/ExampleService.html":{}}}],["console.log(&#39;no",{"_index":106,"title":{},"body":{"injectables/ExampleService.html":{}}}],["console.log('example",{"_index":46,"title":{},"body":{"injectables/ExampleService.html":{}}}],["console.log('no",{"_index":100,"title":{},"body":{"injectables/ExampleService.html":{}}}],["console.log(this.injectedconfig",{"_index":136,"title":{},"body":{"injectables/ExampleService.html":{}}}],["const",{"_index":43,"title":{},"body":{"injectables/ExampleService.html":{}}}],["construction",{"_index":95,"title":{},"body":{"injectables/ExampleService.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"injectables/ExampleService.html":{}}}],["constructor(injectedconfig",{"_index":59,"title":{},"body":{"injectables/ExampleService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"injectables/ExampleService.html":{}}}],["consumers",{"_index":118,"title":{},"body":{"injectables/ExampleService.html":{}}}],["contract",{"_index":218,"title":{},"body":{"license.html":{}}}],["copies",{"_index":185,"title":{},"body":{"license.html":{}}}],["copy",{"_index":167,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":155,"title":{},"body":{"license.html":{}}}],["coupling",{"_index":116,"title":{},"body":{"injectables/ExampleService.html":{}}}],["coverage",{"_index":141,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":62,"title":{},"body":{"injectables/ExampleService.html":{}}}],["custom",{"_index":128,"title":{},"body":{"injectables/ExampleService.html":{}}}],["customization",{"_index":122,"title":{},"body":{"injectables/ExampleService.html":{}}}],["customized",{"_index":28,"title":{},"body":{"injectables/ExampleService.html":{}}}],["damages",{"_index":214,"title":{},"body":{"license.html":{}}}],["deal",{"_index":171,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":224,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":65,"title":{},"body":{"injectables/ExampleService.html":{}}}],["default",{"_index":249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":60,"title":{},"body":{"injectables/ExampleService.html":{}}}],["demonstrates",{"_index":15,"title":{},"body":{"injectables/ExampleService.html":{}}}],["dependency",{"_index":17,"title":{},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["deployment",{"_index":124,"title":{},"body":{"injectables/ExampleService.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/ExampleService.html":{},"properties.html":{}}}],["di",{"_index":82,"title":{},"body":{"injectables/ExampleService.html":{}}}],["different",{"_index":123,"title":{},"body":{"injectables/ExampleService.html":{}}}],["distribute",{"_index":181,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":142,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":96,"title":{},"body":{"injectables/ExampleService.html":{}}}],["during",{"_index":94,"title":{},"body":{"injectables/ExampleService.html":{}}}],["easy",{"_index":120,"title":{},"body":{"injectables/ExampleService.html":{}}}],["enables",{"_index":114,"title":{},"body":{"injectables/ExampleService.html":{}}}],["environments",{"_index":125,"title":{},"body":{"injectables/ExampleService.html":{}}}],["event",{"_index":209,"title":{},"body":{"license.html":{}}}],["example",{"_index":10,"title":{},"body":{"injectables/ExampleService.html":{}}}],["exampleoption",{"_index":50,"title":{},"body":{"injectables/ExampleService.html":{}}}],["exampleservice",{"_index":1,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["exampleservice(null",{"_index":84,"title":{},"body":{"injectables/ExampleService.html":{}}}],["exist",{"_index":97,"title":{},"body":{"injectables/ExampleService.html":{}}}],["export",{"_index":53,"title":{},"body":{"injectables/ExampleService.html":{}}}],["express",{"_index":200,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["files",{"_index":170,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":205,"title":{},"body":{"license.html":{}}}],["following",{"_index":190,"title":{},"body":{"license.html":{}}}],["free",{"_index":163,"title":{},"body":{"license.html":{}}}],["functions",{"_index":233,"title":{},"body":{"properties.html":{}}}],["furnished",{"_index":188,"title":{},"body":{"license.html":{}}}],["getexampleoption",{"_index":90,"title":{},"body":{"injectables/ExampleService.html":{}}}],["gets",{"_index":92,"title":{},"body":{"injectables/ExampleService.html":{}}}],["getter",{"_index":35,"title":{},"body":{"injectables/ExampleService.html":{}}}],["git+https://github.com/yellaiahvemula/compodoc",{"_index":242,"title":{},"body":{"properties.html":{}}}],["gracefully",{"_index":66,"title":{},"body":{"injectables/ExampleService.html":{}}}],["granted",{"_index":162,"title":{},"body":{"license.html":{}}}],["handle",{"_index":67,"title":{},"body":{"injectables/ExampleService.html":{}}}],["hereby",{"_index":161,"title":{},"body":{"license.html":{}}}],["holders",{"_index":211,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":235,"title":{},"body":{"properties.html":{}}}],["https://github.com/yellaiahvemula/compodoc",{"_index":236,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":143,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":201,"title":{},"body":{"license.html":{}}}],["import",{"_index":110,"title":{},"body":{"injectables/ExampleService.html":{}}}],["included",{"_index":195,"title":{},"body":{"license.html":{}}}],["including",{"_index":174,"title":{},"body":{"license.html":{}}}],["index",{"_index":56,"title":{"index.html":{}},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ExampleService.html":{}}}],["initialize",{"_index":79,"title":{},"body":{"injectables/ExampleService.html":{}}}],["inject",{"_index":70,"title":{},"body":{"injectables/ExampleService.html":{}}}],["inject(configurationtoken",{"_index":133,"title":{},"body":{"injectables/ExampleService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ExampleService.html":{}},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ExampleService.html":{}}}],["injected",{"_index":77,"title":{},"body":{"injectables/ExampleService.html":{}}}],["injectedconfig",{"_index":87,"title":{},"body":{"injectables/ExampleService.html":{}}}],["injection",{"_index":18,"title":{},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":111,"title":{},"body":{"injectables/ExampleService.html":{}}}],["injectiontoken('configurationtoken",{"_index":131,"title":{},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["inside",{"_index":234,"title":{},"body":{"properties.html":{}}}],["instance",{"_index":64,"title":{},"body":{"injectables/ExampleService.html":{}}}],["isc",{"_index":240,"title":{},"body":{"properties.html":{}}}],["issue",{"_index":7,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["issue#readme",{"_index":237,"title":{},"body":{"properties.html":{}}}],["issue.git",{"_index":243,"title":{},"body":{"properties.html":{}}}],["issue/issues",{"_index":239,"title":{},"body":{"properties.html":{}}}],["it's",{"_index":72,"title":{},"body":{"injectables/ExampleService.html":{}}}],["kind",{"_index":199,"title":{},"body":{"license.html":{}}}],["liability",{"_index":215,"title":{},"body":{"license.html":{}}}],["liable",{"_index":212,"title":{},"body":{"license.html":{}}}],["license",{"_index":153,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":175,"title":{},"body":{"license.html":{}}}],["limited",{"_index":202,"title":{},"body":{"license.html":{}}}],["link",{"_index":137,"title":{},"body":{"injectables/ExampleService.html":{}}}],["loose",{"_index":115,"title":{},"body":{"injectables/ExampleService.html":{}}}],["made",{"_index":75,"title":{},"body":{"injectables/ExampleService.html":{}}}],["management",{"_index":14,"title":{},"body":{"injectables/ExampleService.html":{}}}],["matching",{"_index":140,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":204,"title":{},"body":{"license.html":{}}}],["merge",{"_index":179,"title":{},"body":{"license.html":{}}}],["method",{"_index":98,"title":{},"body":{"injectables/ExampleService.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/ExampleService.html":{},"properties.html":{}}}],["miscellaneous",{"_index":246,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":154,"title":{},"body":{"license.html":{}}}],["modify",{"_index":178,"title":{},"body":{"license.html":{}}}],["modules",{"_index":225,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":86,"title":{},"body":{"injectables/ExampleService.html":{}}}],["new",{"_index":63,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":47,"title":{},"body":{"injectables/ExampleService.html":{}}}],["ngoninit",{"_index":42,"title":{},"body":{"injectables/ExampleService.html":{}}}],["noninfringement",{"_index":208,"title":{},"body":{"license.html":{}}}],["notice",{"_index":193,"title":{},"body":{"license.html":{}}}],["object",{"_index":88,"title":{},"body":{"injectables/ExampleService.html":{}}}],["objects",{"_index":34,"title":{},"body":{"injectables/ExampleService.html":{}}}],["obtaining",{"_index":166,"title":{},"body":{"license.html":{}}}],["option",{"_index":44,"title":{},"body":{"injectables/ExampleService.html":{}}}],["option:&#39",{"_index":105,"title":{},"body":{"injectables/ExampleService.html":{}}}],["optional",{"_index":20,"title":{},"body":{"injectables/ExampleService.html":{}}}],["otherwise",{"_index":220,"title":{},"body":{"license.html":{}}}],["out",{"_index":222,"title":{},"body":{"license.html":{}}}],["overview",{"_index":226,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":229,"title":{"properties.html":{}},"body":{}}],["param",{"_index":132,"title":{},"body":{"injectables/ExampleService.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"injectables/ExampleService.html":{}}}],["particular",{"_index":206,"title":{},"body":{"license.html":{}}}],["patterns",{"_index":19,"title":{},"body":{"injectables/ExampleService.html":{}}}],["permission",{"_index":160,"title":{},"body":{"license.html":{}}}],["permit",{"_index":186,"title":{},"body":{"license.html":{}}}],["person",{"_index":165,"title":{},"body":{"license.html":{}}}],["persons",{"_index":187,"title":{},"body":{"license.html":{}}}],["portions",{"_index":197,"title":{},"body":{"license.html":{}}}],["private",{"_index":134,"title":{},"body":{"injectables/ExampleService.html":{}}}],["privately",{"_index":74,"title":{},"body":{"injectables/ExampleService.html":{}}}],["production",{"_index":51,"title":{},"body":{"injectables/ExampleService.html":{}}}],["properties",{"_index":39,"title":{"properties.html":{}},"body":{"injectables/ExampleService.html":{},"properties.html":{}}}],["property",{"_index":93,"title":{},"body":{"injectables/ExampleService.html":{}}}],["provide",{"_index":48,"title":{},"body":{"injectables/ExampleService.html":{}}}],["provided",{"_index":69,"title":{},"body":{"injectables/ExampleService.html":{},"license.html":{}}}],["providers",{"_index":30,"title":{},"body":{"injectables/ExampleService.html":{}}}],["provides",{"_index":23,"title":{},"body":{"injectables/ExampleService.html":{}}}],["public",{"_index":130,"title":{},"body":{"injectables/ExampleService.html":{}}}],["publish",{"_index":180,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":207,"title":{},"body":{"license.html":{}}}],["readme",{"_index":151,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":135,"title":{},"body":{"injectables/ExampleService.html":{}}}],["receive",{"_index":33,"title":{},"body":{"injectables/ExampleService.html":{}}}],["remarks",{"_index":113,"title":{},"body":{"injectables/ExampleService.html":{}}}],["repository",{"_index":241,"title":{},"body":{"properties.html":{}}}],["restriction",{"_index":173,"title":{},"body":{"license.html":{}}}],["results",{"_index":139,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":80,"title":{},"body":{"injectables/ExampleService.html":{}}}],["returns",{"_index":108,"title":{},"body":{"injectables/ExampleService.html":{}}}],["rights",{"_index":176,"title":{},"body":{"license.html":{}}}],["routes",{"_index":245,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["safe",{"_index":38,"title":{},"body":{"injectables/ExampleService.html":{}}}],["scenarios",{"_index":127,"title":{},"body":{"injectables/ExampleService.html":{}}}],["see",{"_index":102,"title":{},"body":{"injectables/ExampleService.html":{}}}],["sell",{"_index":184,"title":{},"body":{"license.html":{}}}],["service",{"_index":11,"title":{},"body":{"injectables/ExampleService.html":{}}}],["settings",{"_index":13,"title":{},"body":{"injectables/ExampleService.html":{}}}],["setup",{"_index":103,"title":{},"body":{"injectables/ExampleService.html":{}}}],["shall",{"_index":194,"title":{},"body":{"license.html":{}}}],["software",{"_index":168,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ExampleService.html":{}}}],["specifies",{"_index":71,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/.../compodoc",{"_index":248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/compodoc",{"_index":6,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":144,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":78,"title":{},"body":{"injectables/ExampleService.html":{}}}],["stored",{"_index":73,"title":{},"body":{"injectables/ExampleService.html":{}}}],["string",{"_index":109,"title":{},"body":{"injectables/ExampleService.html":{}}}],["subject",{"_index":189,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":182,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":196,"title":{},"body":{"license.html":{}}}],["supports",{"_index":126,"title":{},"body":{"injectables/ExampleService.html":{}}}],["table",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":149,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":83,"title":{},"body":{"injectables/ExampleService.html":{}}}],["testing",{"_index":121,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.configservice.exampleoption",{"_index":99,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.exampleservice.exampleoption",{"_index":45,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.injectedconfig.exampleoption",{"_index":138,"title":{},"body":{"injectables/ExampleService.html":{}}}],["through",{"_index":29,"title":{},"body":{"injectables/ExampleService.html":{}}}],["token",{"_index":21,"title":{},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":219,"title":{},"body":{"license.html":{}}}],["type",{"_index":37,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":129,"title":{},"body":{"injectables/ExampleService.html":{}}}],["undefined",{"_index":81,"title":{},"body":{"injectables/ExampleService.html":{}}}],["use",{"_index":177,"title":{},"body":{"license.html":{}}}],["uses",{"_index":31,"title":{},"body":{"injectables/ExampleService.html":{}}}],["usevalue",{"_index":49,"title":{},"body":{"injectables/ExampleService.html":{}}}],["value",{"_index":52,"title":{},"body":{"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":27,"title":{},"body":{"injectables/ExampleService.html":{}}}],["variable",{"_index":147,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":247,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vemula",{"_index":158,"title":{},"body":{"license.html":{}}}],["version",{"_index":230,"title":{},"body":{"properties.html":{}}}],["via",{"_index":89,"title":{},"body":{"injectables/ExampleService.html":{}}}],["warranties",{"_index":203,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":198,"title":{},"body":{"license.html":{}}}],["whether",{"_index":216,"title":{},"body":{"license.html":{}}}],["without",{"_index":172,"title":{},"body":{"license.html":{}}}],["yallaiah",{"_index":159,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/compodoc-issue-check.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Example service for application settings management.\nThis service demonstrates Angular's dependency injection patterns with optional\ntoken-based injection. It provides centralized access to configuration values\nthat can be customized through dependency injection providers.\nThe service uses the ConfigurationToken to receive configuration objects\nand provides getter methods for type-safe access to configuration properties.\nExample :constructor(private exampleService: ExampleService) {}\nngOnInit() {\n  const option = this.exampleService.exampleOption;\n  console.log('Example option:', option);\n}Example :@NgModule({\n  providers: [\n    ExampleService,\n    {\n      provide: ConfigurationToken,\n      useValue: { exampleOption: 'production-value' }\n    }\n  ]\n})\nexport class AppModule { }\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    exampleOption\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injectedConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/compodoc-issue-check.service.ts:73\n                            \n                        \n\n                \n                    \n                            Creates a new instance of ExampleService.\nThe constructor uses Angular's dependency injection with the @Optional decorator\nto gracefully handle cases where no configuration is provided. The @Inject\ndecorator specifies the ConfigurationToken for token-based injection.\nWhen configuration is provided, it's stored privately and made available\nthrough getter methods. If no configuration is injected, the service\nwill still initialize but may return undefined values.\nExample :// Configuration provided through DI\nconst service = new ExampleService({ exampleOption: 'test-value' });Example :// No configuration provided (optional injection)\nconst service = new ExampleService(null);\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injectedConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nOptional configuration object injected via DI token\n\n\n                                                        \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            Example :// Configuration provided through DI\nconst service = new ExampleService({ exampleOption: 'test-value' });\n                                        \n                                        \n                                            Example :// No configuration provided (optional injection)\nconst service = new ExampleService(null);\n                                        \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        exampleOption\n                    \n                \n\n                \n                    \n                        getexampleOption()\n                    \n                \n                            \n                                \n                                    Defined in src/compodoc-issue-check.service.ts:137\n                                \n                            \n                    \n                        \n                                Gets the example option value from the injected configuration.\nThis getter provides access to the 'exampleOption' property from the\nconfiguration object that was injected during service construction.\nIf no configuration was provided or if the exampleOption property\ndoesn't exist in the configuration, this method may return undefined.\nExample :const option = this.configService.exampleOption;\nif (option) {\n  console.log('Example option:', option);\n} else {\n  console.log('No example option configured');\n}See ConfigurationToken for configuration injection setup\n\n\n                                \n                                        Example :\n                                            \n                                                Example :const option = this.configService.exampleOption;\nif (option) {\n  console.log(&#39;Example option:&#39;, option);\n} else {\n  console.log(&#39;No example option configured&#39;);\n}\n                                            \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\n/**\n * Injection token for configuration dependency injection.\n * \n * @remarks\n * This token enables loose coupling between the configuration service and its\n * consumers, allowing for easy testing and configuration customization in\n * different deployment environments. The token supports optional injection\n * to gracefully handle scenarios where custom configuration is not provided.\n * \n * @example\n * ```typescript\n * providers: [\n *   {\n *     provide: ConfigurationToken,\n *     useValue: { exampleOption: 'custom-value' }\n *   }\n * ]\n * ```\n * \n * @public\n */\nexport const ConfigurationToken = new InjectionToken('ConfigurationToken');\n\n/**\n * Example service for application settings management.\n * \n * @remarks\n * This service demonstrates Angular's dependency injection patterns with optional\n * token-based injection. It provides centralized access to configuration values\n * that can be customized through dependency injection providers.\n * \n * The service uses the ConfigurationToken to receive configuration objects\n * and provides getter methods for type-safe access to configuration properties.\n * \n * @example\n * ```typescript\n * constructor(private exampleService: ExampleService) {}\n * ngOnInit() {\n *   const option = this.exampleService.exampleOption;\n *   console.log('Example option:', option);\n * }\n * ```\n * \n * @example\n * ```typescript\n * @NgModule({\n *   providers: [\n *     ExampleService,\n *     {\n *       provide: ConfigurationToken,\n *       useValue: { exampleOption: 'production-value' }\n *     }\n *   ]\n * })\n * export class AppModule { }\n * ```\n * \n * @public\n */\n@Injectable()\nexport class ExampleService {\n\n    /**\n     * Creates a new instance of ExampleService.\n     * \n     * @param injectedConfig - Optional configuration object injected via DI token\n     * \n     * @remarks\n     * The constructor uses Angular's dependency injection with the @Optional decorator\n     * to gracefully handle cases where no configuration is provided. The @Inject\n     * decorator specifies the ConfigurationToken for token-based injection.\n     * \n     * When configuration is provided, it's stored privately and made available\n     * through getter methods. If no configuration is injected, the service\n     * will still initialize but may return undefined values.\n     * \n     * @example\n     * ```typescript\n     * // Configuration provided through DI\n     * const service = new ExampleService({ exampleOption: 'test-value' });\n     * ```\n     * \n     * @example\n     * ```typescript\n     * // No configuration provided (optional injection)\n     * const service = new ExampleService(null);\n     * ```\n     * \n     * @public\n     */\n    constructor(\n        @Optional()\n        @Inject(ConfigurationToken)\n        private readonly injectedConfig: any,\n    ) {\n        console.log(this.injectedConfig);\n    }\n\n    /**\n     * Gets the example option value from the injected configuration.\n     * \n     * @returns The example option string value from configuration\n     * \n     * @remarks\n     * This getter provides access to the 'exampleOption' property from the\n     * configuration object that was injected during service construction.\n     * \n     * If no configuration was provided or if the exampleOption property\n     * doesn't exist in the configuration, this method may return undefined.\n     * \n     * @example\n     * ```typescript\n     * const option = this.configService.exampleOption;\n     * if (option) {\n     *   console.log('Example option:', option);\n     * } else {\n     *   console.log('No example option configured');\n     * }\n     * ```\n     * \n     * @see {@link ConfigurationToken} for configuration injection setup\n     * \n     * @public\n     */\n    get exampleOption(): string {\n        return this.injectedConfig.exampleOption;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/compodoc-issue-check.service.ts\n            \n            injectable\n            ExampleService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/compodoc-issue-check.service.ts\n            \n            variable\n            ConfigurationToken\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\ncompodoc-issue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"license - license","body":"\n                   \n\n\n\n\n\nMIT License\nCopyright (c) 2025 Vemula Yallaiah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : checking compodoc issue with functions or methods inside a class\n        \n            Homepage : https://github.com/yellaiahvemula/compodoc-issue#readme\n        \n            Bugs : https://github.com/yellaiahvemula/compodoc-issue/issues\n        \n            License : ISC\n        \n            Repository : git+https://github.com/yellaiahvemula/compodoc-issue.git\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigurationToken   (src/.../compodoc-issue-check.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/compodoc-issue-check.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigurationToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('ConfigurationToken')\n                    \n                \n\n            \n                \n                    Injection token for configuration dependency injection.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
